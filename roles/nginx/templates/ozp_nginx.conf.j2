# nginx config

server {
        server_name {{ frontend_fqdn }};
        listen {{ frontend_port }} ssl;

        location = /favicon.ico { access_log off; log_not_found off; }

        # enforce trailing slash on urls
        location ~ ^/(?<page>static|center|hud|webtop|help|iwc|iwc_sample_widgets)$ {
            return 301 $scheme://$http_host/$page/;
        }

        location /static/ {
            alias /usr/local/ozp/frontend/django_static/;
        }
        location /center/ {
            alias /usr/local/ozp/frontend/center/;
        }
        location /hud/ {
            alias /usr/local/ozp/frontend/hud/;
        }
        location /webtop/ {
            alias /usr/local/ozp/frontend/webtop/;
        }
        location /iwc/ {
            alias /usr/local/ozp/frontend/iwc/;
        }
        location /iwc_sample_widgets/ {
            alias /usr/local/ozp/frontend/iwc_sample_widgets/;
        }
        location /help/ {
            alias /usr/local/ozp/frontend/help/;
        }

        location / {
            # enabling this broke production for Swagger and any requests
            # with responses larger than ~48k
            proxy_buffering off;
            proxy_pass https://{{ api_fqdn }}:{{ api_port }}/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Scheme $scheme;
            # SSL settings for django-ssl-client-auth
            {% if pki_login %}
            proxy_set_header X-SSL-User-DN $ssl_client_s_dn;
            proxy_set_header X-SSL-Issuer-DN $ssl_client_i_dn;
            proxy_set_header X-SSL-Authenticated $ssl_client_verify;
            {% endif %}
        }

        # Enables the HTTPS protocol for the given virtual server
        ssl                  on;

        # Specifies a file with the certificate in the PEM format for the given
        # virtual server. If intermediate certificates should be specified in
        # addition to a primary certificate, they should be specified in the
        # same file in the following order: the primary certificate comes first,
        # then the intermediate certificates. A secret key in the PEM format may
        # be placed in the same file
        ssl_certificate      /usr/local/ozp/server_certs/server.crt;

        # Specifies a file with the secret key in the PEM format for the given
        # virtual server
        ssl_certificate_key  /usr/local/ozp/server_certs/private/server.key;

        # Specifies a file with trusted CA certificates in the PEM format used
        # to verify client certificates
        ssl_client_certificate      /usr/local/ozp/ca_certs/rootCA.pem;

        # Change to 'required' if only SSL Client authenticated
        # request should be passed to Django
        {% if pki_login %}
        ssl_verify_client   on;
        {% endif %}

        # Specifies a time during which a client may reuse the session
        # parameters stored in a cache.
        ssl_session_timeout  5m;

        # Disallow poor algorithms for SSL
        # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers   on;
        ssl_session_cache shared:SSL:10m;
        ssl_verify_depth 2;
    }

server {
        server_name {{ frontend_fqdn }};
        listen 4430 ssl;

        location = /favicon.ico { access_log off; log_not_found off; }

        location /static/ {
            alias /usr/local/ozp/frontend/django_static/;
        }

        location / {
            proxy_pass http://{{ frontend_fqdn }}:8081/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Scheme $scheme;
            # SSL settings for django-ssl-client-auth
            {% if pki_login %}
            proxy_set_header X-SSL-User-DN $ssl_client_s_dn;
            proxy_set_header X-SSL-Issuer-DN $ssl_client_i_dn;
            proxy_set_header X-SSL-Authenticated $ssl_client_verify;
            {% endif %}
        }

        # Enables the HTTPS protocol for the given virtual server
        ssl                  on;

        # Specifies a file with the certificate in the PEM format for the given
        # virtual server. If intermediate certificates should be specified in
        # addition to a primary certificate, they should be specified in the
        # same file in the following order: the primary certificate comes first,
        # then the intermediate certificates. A secret key in the PEM format may
        # be placed in the same file
        ssl_certificate      /usr/local/ozp/server_certs/server.crt;

        # Specifies a file with the secret key in the PEM format for the given
        # virtual server
        ssl_certificate_key  /usr/local/ozp/server_certs/private/server.key;

        # Specifies a file with trusted CA certificates in the PEM format used
        # to verify client certificates
        ssl_client_certificate      /usr/local/ozp/ca_certs/rootCA.pem;

        # Change to 'required' if only SSL Client authenticated
        # request should be passed to Django
        {% if pki_login %}
        ssl_verify_client   on;
        {% endif %}

        # Specifies a time during which a client may reuse the session
        # parameters stored in a cache.
        ssl_session_timeout  5m;

        # Disallow poor algorithms for SSL
        # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers   on;
        ssl_session_cache shared:SSL:10m;
        ssl_verify_depth 2;
    }

server {
        server_name {{ frontend_fqdn }};
        listen {{ metrics_port }} ssl;

        location = /favicon.ico { access_log off; log_not_found off; }

        location / {
            index index.php  index.html index.htm;
            root /usr/local/ozp/frontend/metrics;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            include /usr/local/nginx/conf/fastcgi_params;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  DOCUMENT_ROOT /usr/local/ozp/frontend/metrics;
            fastcgi_param  SCRIPT_FILENAME   /usr/local/ozp/frontend/metrics$fastcgi_script_name;
            fastcgi_param SSL_CLIENT_S_DN       $ssl_client_s_dn;
            fastcgi_param SSL_CLIENT_I_DN       $ssl_client_i_dn;
        }

        # Enables the HTTPS protocol for the given virtual server
        ssl                  on;

        # Specifies a file with the certificate in the PEM format for the given
        # virtual server. If intermediate certificates should be specified in
        # addition to a primary certificate, they should be specified in the
        # same file in the following order: the primary certificate comes first,
        # then the intermediate certificates. A secret key in the PEM format may
        # be placed in the same file
        ssl_certificate      /usr/local/ozp/server_certs/server.crt;

        # Specifies a file with the secret key in the PEM format for the given
        # virtual server
        ssl_certificate_key  /usr/local/ozp/server_certs/private/server.key;

        # Specifies a file with trusted CA certificates in the PEM format used
        # to verify client certificates
        ssl_client_certificate      /usr/local/ozp/ca_certs/rootCA.pem;

        # Change to 'required' if only SSL Client authenticated
        # request should be passed to Django
        ssl_verify_client   on;

        # Specifies a time during which a client may reuse the session
        # parameters stored in a cache.
        ssl_session_timeout  5m;

        # Disallow poor algorithms for SSL
        # https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers   on;
        ssl_session_cache shared:SSL:10m;
        ssl_verify_depth 2;
    }
