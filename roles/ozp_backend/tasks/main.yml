---
# These tasks will download ozp-backend from GitHub (a branch or tag name) or
# Jenkins (using a specific build number). The necessary dependencies are
# installed, and the backend is deployed using init.d

- name: Remove any existing backend directory
  file:
    path: /usr/local/ozp/backend
    state: absent
  become: true

- name: Create the directory for the backend
  file:
    path: /usr/local/ozp/backend
    state: directory
    owner: ozp
  become: true

- name: Remove any existing python env
  file:
    path: /usr/local/ozp/python-env
    state: absent
  become: true

- name: Create python env
  shell: mkdir -p /usr/local/ozp/python-env;  /usr/local/bin/pyvenv-3.4 /usr/local/ozp/python-env
  become: true
  become_user: ozp

###############################################################################
#                                 GitHub
###############################################################################

- name: Remove any existing local directory for backend
  when: download_from == "github"
  file:
    path: /usr/local/ozp/build/backend
    state: absent
  become: true
  become_user: ozp

- name: Download source from GitHub tag
  when: (download_from == "github" and not offline)
  git:
    repo: {{ git_host }}/ozp/ozp-backend.git
    dest: /usr/local/ozp/build/backend/ozp-backend
    accept_hostkey: yes
  become: true
  become_user: ozp

- name: Checkout git branch or tag name
  when: (download_from == "github" and git_tag_or_branch_name and not offline)
  command: git checkout {{ git_tag_or_branch_name }}
  args:
    chdir: /usr/local/ozp/build/backend/ozp-backend
  become: true
  become_user: ozp


- name: Fix Python sandbox problem
  shell: chown -R ozp /usr/local/lib/python3.4/lib2to3/
  become: true

- name: Install python dependencies
  when: (download_from == "github" and not offline)
  shell: source /usr/local/ozp/python-env/bin/activate; pip install --upgrade pip; pip install wheel; export PATH=/usr/local/pgsql/bin:$PATH; pip install -r requirements.txt --no-cache-dir -I
  args:
    chdir: /usr/local/ozp/build/backend/ozp-backend
  become: true
  become_user: ozp

- name: Create release tarball
  when: (download_from == "github" and not offline)
  shell: source /usr/local/ozp/python-env/bin/activate; export PATH=/usr/local/pgsql/bin:$PATH; python release.py --no-version
  args:
    chdir: /usr/local/ozp/build/backend/ozp-backend
  become: true
  become_user: ozp

# now we need to move /ozp/build/backend/ozp-backend/new-backend-<XYZ>.tar.gz
- name: Extract tarball and move to correct location
  when: (download_from == "github" and not offline)
  shell: mv `ls *.tar.gz` new-backend.tar.gz; tar xzf new-backend.tar.gz; cp -r release/* /usr/local/ozp/backend/
  args:
    chdir: /usr/local/ozp/build/backend/ozp-backend
  become: true
  become_user: ozp


###############################################################################
#                                 Jenkins
###############################################################################
- name: Download artifacts from Jenkins
  when: download_from == "jenkins"
  uri:
    url: https://{{ jenkins_host }}/view/OZP/job/{{ jenkins_project}}/{{ jenkins_build_number }}/artifact/*zip*/archive.zip
    dest: "{{ download_dir }}/backend_jenkins_archive.zip"
    method: GET
    user: "{{ jenkins_username }}"
    password: "{{ jenkins_password }}"
    force_basic_auth: true
    timeout: 30
    status_code: 200
  become: true
  become_user: ozp

- name: Remove any existing "artifact" directory
  when: download_from == "jenkins"
  file:
    path: "{{ download_dir }}/archive"
    state: absent
  become: true
  become_user: ozp

- name: Extract archive from Jenkins (outer zip file)
  when: download_from == "jenkins"
  unarchive:
    src: "{{ download_dir }}/backend_jenkins_archive.zip"
    dest: "{{ download_dir }}"
    copy: no
  become: true
  become_user: ozp

- name: Rename tar file from Jenkins
  when: download_from == "jenkins"
  shell: mv `ls -1` {{ download_dir }}/backend.tar.gz
  args:
    chdir: "{{ download_dir }}/archive"
  become: true
  become_user: ozp

###############################################################################
#                                 Local
###############################################################################
- name: Extract archive contents
  when: (download_from == "jenkins" or download_from == "local")
  unarchive:
    src: "{{ download_dir }}/backend.tar.gz"
    dest: "{{ download_dir }}"
    copy: no
  become: true
  become_user: ozp

# At this point we have the backend files in {{ download_dir }}/release. We
# want to move them to /usr/local/ozp/backend and change their owner to the ozp user
#
- name: Move files
  when: (download_from == "jenkins" or download_from == "local")
  shell: mv {{ download_dir }}/release/* /usr/local/ozp/backend/
  become: true

- name: Change ownership
  when: (download_from == "jenkins" or download_from == "local")
  file:
    path: /usr/local/ozp/backend
    owner: ozp
    state: directory
    recurse: true
  become: true

################
# Common to GitHub and Jenkins and Local
################
- name: Use custom settings.py file
  template:
    src: settings.py.j2
    dest: /usr/local/ozp/backend/ozp/settings.py
    owner: ozp
    mode: 0644
  become: true

# Alternatively, copy an existing settings.py file
- name: Use non-templated settings.py file
  when: use_static_settings_file
  copy:
    src: settings.py
    dest: /usr/local/ozp/backend/ozp/settings.py
    mode: 0644
  become: true
  become_user: ozp

- name: Copy init.d file
  copy:
    src: gunicorn_ozp.initd
    dest: /etc/init.d/gunicorn_ozp
    mode: 0755
  become: true

- name: Create the directory for the nfs mount (for images)
  file:
    path: /mnt/nfs/ozp_media
    state: directory
    recurse: true
    owner: ozp
  become: true

- name: Mount the image directory via nfs
  when: image_fqdn != "localhost"
  mount:
    src: "{{ image_fqdn }}:/usr/local/ozp/media"
    name: /mnt/nfs/ozp_media
    state: mounted
    fstype: nfs
    opts: rw
  become: true

## WARNING: This will destroy all exiting data!!!
- name: Redeploy the service AND reset the database with sample data
  when: reset_database
  run_once: true
  command: service gunicorn_ozp nuke
  become: true

- name: Reinstall the backend (also installs python dependencies from release)
  when: (download_from == "jenkins" or download_from == "local")
  command: service gunicorn_ozp redeploy
  become: true

- name: Ensure the service is running (and enable it at boot)
  when: download_from == "github"
  service: name=gunicorn_ozp state=started enabled=yes
  become: true
  ignore_errors: true
